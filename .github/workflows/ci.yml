name: CI Checks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ui-checks:
    name: UI Checks (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x', '21.x']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-${{ matrix.node-version }}-
            
      - name: Install dependencies
        run: npm ci
        
      - name: Check formatting
        run: npm run format:ui
        
      - name: Lint check
        run: npm run lint:ui
        
      - name: Type check
        run: npm run types:ui
        
      - name: Run tests
        run: npm run ui:test
        
      - name: Upload test coverage
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ui:coverage-node-${{ matrix.node-version }}
          path: coverage/
          retention-days: 5

  backend-checks:
    name: Backend Checks (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['20.x', '21.x']
    
    # Add MySQL service container
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: dappykit_apps
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            backend/node_modules
          key: ${{ runner.os }}-backend-${{ matrix.node-version }}-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-${{ matrix.node-version }}-
            
      - name: Install root dependencies
        run: npm ci
        
      - name: Install backend dependencies
        run: cd backend && npm ci
        
      - name: Check formatting
        run: npm run format:backend
        
      - name: Lint check
        run: npm run lint:backend
        
      - name: Type check
        run: cd backend && npx tsc --noEmit --project tsconfig.json
        
      # Add environment variables for MySQL connection
      - name: Run tests
        run: npm run backend:test
        env:
          DB_HOST: localhost
          DB_USER: root
          DB_PASSWORD: root
          DB_NAME: dappykit_apps

  notify:
    name: Notify status
    needs: [ui-checks, backend-checks]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Check workflow status
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
      
      - name: Successful run
        if: ${{ !contains(needs.*.result, 'failure') }}
        run: echo "All checks passed successfully!" 